#!/bin/bash

SCRIPTNAME=${0##*/}
VERSION=v1.0

LOGIN_HOST=202.204.48.82
ALWAYS_ATTEMPT_IPV6=1
WIFI_SKIP_LOGIN="USTB-Student USTB-V6"

# Bouncing commands to functions
_ustb_command() {
	[ $# -lt 1 ] && return

	command=$1
	shift

	# check if command exisists
	type -t "ustb_$command" >/dev/null
	[ $? -ne 0 ] && {
		[ "$command" == "exit" ] && exit 0
		echo "$SCRIPTNAME: '$command' is not a command. See '$SCRIPTNAME help'."
		return 1
	}
	# excute
	ustb_$command
}

ustb_help() {
	cat <<END
Usage: $SCRIPTNAME [options] <command>
Commands:
login		login to ustb wifi
whoami		show current user
fee		show network fees left
info		show further flow infomation
version		show version and authors
help		show this information

END
}

ustb_version() {
	cat <<INFO
$SCRIPTNAME $VERSION - A utility script for USTB web.
Copyright 2020		Shuaicheng Zhu <jason23347@gmail.com>

INFO
}

ustb_info() {
	local v4_only=0

	# fetch login page info
	local res=$(curl -s $LOGIN_HOST | iconv -f GBK -t UTF-8)

	# LOGIN check
	echo "$res" | grep "flow=" 2>&1 >/dev/null
	[ $? -ne 0 ] && {
		echo "Login required."
		return 1
	}

	# IPV6 check
	v46m=$(echo "$res" | grep ";v46m=" | sed "s/.*v46m=//;s/;.*//")
	[ $v46m -eq 4 ] || [ $v46m -eq 12 ] || v4_only=1

	# IPV4 flow
	local flow=$(echo "$res" | grep "flow=" | sed "s/.*flow='//;s/[[:space:]].*//")
	# IPV4 fee
	local fee=$(echo "$res" | grep "fee=" | sed "s/.*fee='//;s/[[:space:]].*//")
	# IPV6 upload flow
	local flow_v6=$(echo "$res" | grep "v6af=" | sed "s/.*v6af=//;s/;.*//")/4

	cat <<INFO
IP (V4):	$(echo "$res" | grep "v4ip=" | sed "s/.*v4ip='//;s/'.*//")
Flow (V4):	$(echo "scale=2; $flow / 1024" | bc) MB
Flow cost:	￥$(echo "scale=2; $flow / (1024 ^ 2) / 1.5" | bc)

INFO

	[ $v4_only -eq 1 ] && {
		cat <<INFO
IPV6 not found.

INFO
		return 0
	}

	cat <<INFO
IP (V6):	$(echo "$res" | grep "v6ip=" | sed "s/.*v6ip='//;s/'.*//")
Flow (V6):	$(echo "scale=2; $flow_v6 / 1024" | bc) MB

FSR (%):	$(echo "scale=2; $flow_v6 / ($flow_v6 + $flow)" | bc)

INFO
}

ustb_fee() {
	local amount=$(curl -s $LOGIN_HOST | grep 'fee=' |
		sed "s/.*fee='//;s/[[:space:]].*//")
	printf "Money left: ￥%s\n" \
		$(echo "scale=2;$amount/10000" | bc)
}

ustb_whoami() {
	printf "Current user: %s\n" \
		$(curl -s $LOGIN_HOST | grep ';uid' |
			iconv -f GBK -t UTF-8 | sed "s/.*uid='//;s/';.*//")
}

ustb_login() {
	# Check ESSID
	ESSID=$(/sbin/iwconfig 2>/dev/null | grep ESSID | awk '{print $4}' |
		sed 's/ESSID://;s/"//g')
	grep $ESSID 2>&1 1>/dev/null <<<$WIFI_SKIP_LOGIN && {
		echo "warn: Already auto logged in to $ESSID."
		# return
	}

	# Input user info
	read -ep "Username: " Username
	read -sep "Passeord: " password
	[ $ALWAYS_ATTEMPT_IPV6 -gt 0 ] && has_v6=y ||
		read -n1 -ep "Enable IPV6 address?[y/N]" has_v6

	# Fetch IPV6 address
	[[ "$has_v6" =~ (y|Y) ]] && {
		printf "\nfetching IPV6 address..."
		ip_addr=$(curl -s cippv6.ustb.edu.cn/get_ip.php)
		printf "done.\n"
	}

	# Do login
	res=$(curl -s --retry 3 \
		-d "DDDDD=$USERNAME&upass=$PASSWORD&0MKKey=123456789&v6ip=$ip_addr" \
		"$HOST" | grep "You have successfully logged into our system")
	echo "Login succeeded."
}

# Run in cli mode if no arguments,
[ $# -lt 1 ] && {
	while read -ep "ustb> " line; do
		_ustb_command $line
	done
} || {
	# or excute single command
	_ustb_command $*
	exit $?
}
